{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/TaskItem/index.tsx","components/Task/index.tsx","components/Rewards/index.tsx","components/Play/index.tsx"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","answer","variant","type","onOpenCards","isCardsOpen","data-type","className","onClick","width","height","viewBox","fill","xmlns","id","d","stroke","Task","history","useHistory","dispatch","useDispatch","currentQuestionPage","useSelector","state","currentQuestionData","data","useEffect","setCurrentReward","rewards","idx","setData","e","setIsCardsOpen","JSON","parse","currentTarget","dataset","resetCurrentQuestionPage","replace","setTimeout","setCurrentQuestionPage","classList","add","title","variants","map","TaskItem","key","Rewards","rew","PlayPage","rewardsList","useRef","useState","isRewardsMenuOpen","setIsRewardsMenuOpen","current","contains","remove","ref"],"mappings":"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","file":"static/js/3.33d4f4ee.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\r\nimport \"./styles.css\";\r\n interface Props {\r\n  answer:string,\r\n  variant:string,\r\n  type:boolean,\r\n  onOpenCards:any,\r\n  isCardsOpen:boolean\r\n\r\n}\r\n\r\nexport default ({ answer, variant, type, onOpenCards, isCardsOpen }:Props) => {\r\n  return (\r\n    <li\r\n      data-type={type}\r\n      className={`task-item ${\r\n        isCardsOpen ? (type === true ? \"task-item--correct\" : \"\") : \"\"\r\n      }`}\r\n      onClick={onOpenCards}\r\n    >\r\n      <svg\r\n        className=\"task-item__block\"\r\n        width=\"390\"\r\n        height=\"72\"\r\n        viewBox=\"0 0 390 72\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          id=\"itemBorder\"\r\n          d=\"M23.8825 5.08639C26.055 2.19863 29.4585 0.5 33.0722 0.5H356.928C360.542 0.5 363.945 2.19863 366.118 5.08639L389.374 36L366.118 66.9136C363.945 69.8014 360.541 71.5 356.928 71.5H33.0722C29.4585 71.5 26.055 69.8014 23.8825 66.9136L0.625694 36L23.8825 5.08639Z\"\r\n          fill=\"white\"\r\n          stroke=\"#D0D0D8\"\r\n        />\r\n      </svg>\r\n      <span className=\"task-item__letter\">{variant}</span>\r\n      <span className=\"task-item__variant\">{answer}</span>\r\n    </li>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport \"./styles.css\";\r\nimport TaskItem from \"../TaskItem\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  setCurrentQuestionPage,\r\n  setData,\r\n  resetCurrentQuestionPage,\r\n  setIsCardsOpen,\r\n  setCurrentReward,\r\n} from \"../../redux/actions\";\r\nimport data from \"../../json/data.json\";\r\nimport rewards from \"../../json/rewards.json\";\r\nimport { RootState } from \"../../redux/reducers\";\r\nimport { Data } from \"../../redux/types\";\r\n\r\nconst Task = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const currentQuestionPage: number = useSelector(\r\n    (state: RootState) => state.currentQuestionPage\r\n  );\r\n  const currentQuestionData: Data = useSelector(\r\n    (state: RootState) => state.data\r\n  );\r\n  const isCardsOpen: boolean = useSelector(\r\n    (state: RootState) => state.isCardsOpen\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (currentQuestionPage > 0) {\r\n      dispatch(setCurrentReward(rewards[currentQuestionPage - 1].value));\r\n    }\r\n    const idx = data[currentQuestionPage];\r\n    dispatch(setData(idx));\r\n  }, [dispatch, currentQuestionPage]);\r\n\r\n  const onOpenCards = (e: any) :void => {\r\n    if (!isCardsOpen) {\r\n      dispatch(setIsCardsOpen());\r\n      if (JSON.parse(e.currentTarget.dataset.type)) {\r\n        if (currentQuestionPage === data.length - 1) {\r\n          dispatch(setIsCardsOpen());\r\n          dispatch(resetCurrentQuestionPage());\r\n          return history.replace(\"/genesis/finish\");\r\n        } else {\r\n          setTimeout(() => {\r\n            dispatch(setIsCardsOpen());\r\n            dispatch(setCurrentQuestionPage());\r\n          }, 3000);\r\n        }\r\n      } else {\r\n        e.currentTarget.classList.add(\"task-item--uncorrect\");\r\n        setTimeout(() => {\r\n          dispatch(setIsCardsOpen());\r\n          dispatch(resetCurrentQuestionPage());\r\n          return history.replace(\"/genesis/finish\");\r\n        }, 3000);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <h1 className=\"task-title\">{currentQuestionData.title}</h1>\r\n      <ul className=\"task-list\">\r\n        {currentQuestionData.variants &&\r\n          currentQuestionData.variants.map((variant) => (\r\n            <TaskItem\r\n              key={variant.id}\r\n              variant={variant.variant}\r\n              answer={variant.answer}\r\n              type={variant.type}\r\n              onOpenCards={onOpenCards}\r\n              isCardsOpen={isCardsOpen}\r\n            />\r\n          ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import \"./styles.css\";\r\nimport React from \"react\";\r\nimport rewards from \"../../json/rewards.json\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {RootState} from '../../redux/reducers';\r\n\r\nconst Rewards = () => {\r\n  const currentQuestionPage = useSelector((state:RootState) => state.currentQuestionPage);\r\n  return (\r\n    <section className=\"rewards\">\r\n      <ul className=\"rewards-list animate__animated animate__bounceInDown\">\r\n        {rewards.map((rew) => (\r\n          <li\r\n            key={rew.id}\r\n            className={`rewards-item ${\r\n              rew.id === currentQuestionPage\r\n                ? \"rewards-item--current\"\r\n                : rew.id < currentQuestionPage\r\n                ? \"rewards-item--prev\"\r\n                : \"\"\r\n            }`}\r\n          >\r\n            <svg\r\n              className=\"rewards-block\"\r\n              width=\"240\"\r\n              height=\"32\"\r\n              viewBox=\"0 0 240 32\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                id=\"rewardsBorder\"\r\n                d=\"M13.5303 3.70404C15.6719 1.64809 18.5256 0.5 21.4944 0.5H218.506C221.474 0.5 224.328 1.64809 226.47 3.70404L239.278 16L226.47 28.296C224.328 30.3519 221.474 31.5 218.506 31.5H21.4944C18.5256 31.5 15.6719 30.3519 13.5303 28.296L0.721988 16L13.5303 3.70404Z\"\r\n                fill=\"white\"\r\n                stroke=\"#D0D0D8\"\r\n              />\r\n            </svg>\r\n            <span className=\"rewards-reward\">${rew.value}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Rewards;\r\n","import React, { FunctionComponent, useRef, useState, MouseEvent } from \"react\";\r\nimport \"./styles.css\";\r\nimport Task from \"../Task\";\r\nimport Rewards from \"../Rewards\";\r\n\r\nconst PlayPage: FunctionComponent = () => {\r\n  const rewardsList: any | null = useRef(null);\r\n  const [isRewardsMenuOpen, setIsRewardsMenuOpen] = useState<boolean>(false);\r\n\r\n  const turnIt = (e: MouseEvent) => {\r\n    if (rewardsList.current.classList.contains(\"db\")) {\r\n      setIsRewardsMenuOpen(!isRewardsMenuOpen);\r\n      return rewardsList.current.classList.remove(\"db\");\r\n    }\r\n    setIsRewardsMenuOpen(!isRewardsMenuOpen);\r\n    rewardsList.current.classList.add(\"db\");\r\n  };\r\n  return (\r\n    <section className=\"play\">\r\n      <div className=\"play-task__lg\">\r\n        <svg\r\n          onClick={turnIt}\r\n          className=\"play-menu\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          {isRewardsMenuOpen ? (\r\n            <path\r\n              d=\"M18.364 7.05025C18.7545 6.65972 18.7545 6.02656 18.364 5.63603C17.9734 5.24551 17.3403 5.24551 16.9497 5.63603L12 10.5858L7.05026 5.63606C6.65974 5.24554 6.02657 5.24554 5.63605 5.63606C5.24553 6.02659 5.24553 6.65975 5.63605 7.05028L10.5858 12L5.63603 16.9497C5.24551 17.3403 5.24551 17.9734 5.63603 18.364C6.02656 18.7545 6.65972 18.7545 7.05025 18.364L12 13.4142L16.9498 18.364C17.3403 18.7545 17.9734 18.7545 18.364 18.364C18.7545 17.9735 18.7545 17.3403 18.364 16.9498L13.4142 12L18.364 7.05025Z\"\r\n              fill=\"#1C1C21\"\r\n            />\r\n          ) : (\r\n            <>\r\n              <path\r\n                d=\"M4 6C4 5.44772 4.44772 5 5 5H19C19.5523 5 20 5.44772 20 6C20 6.55228 19.5523 7 19 7H5C4.44772 7 4 6.55228 4 6Z\"\r\n                fill=\"#1C1C21\"\r\n              />\r\n              <path\r\n                d=\"M4 12C4 11.4477 4.44772 11 5 11H19C19.5523 11 20 11.4477 20 12C20 12.5523 19.5523 13 19 13H5C4.44772 13 4 12.5523 4 12Z\"\r\n                fill=\"#1C1C21\"\r\n              />\r\n              <path\r\n                d=\"M5 17C4.44772 17 4 17.4477 4 18C4 18.5523 4.44772 19 5 19H19C19.5523 19 20 18.5523 20 18C20 17.4477 19.5523 17 19 17H5Z\"\r\n                fill=\"#1C1C21\"\r\n              />\r\n            </>\r\n          )}\r\n        </svg>\r\n\r\n        <Task />\r\n      </div>\r\n      <div ref={rewardsList} className=\"play-rewards__lg\">\r\n        <Rewards />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default PlayPage;\r\n"],"sourceRoot":""}